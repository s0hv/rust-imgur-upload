# Based on the template in https://github.com/FedericoPonzi/rust-ci
name: Build binaries

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  check-client-id:
    name: Check if imgur client id secret exist
    runs-on: ubuntu-latest
    steps:
      - name: A/B Check
        if: ${{ secrets.IMGUR_CLIENT_ID }} == ""
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('IMGUR_CLIENT_ID secret not set!')
  style:
    name: Check Style
    needs: [check-client-id]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  create-release:
    name: deploy
    needs: [style]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64-pc-windows-gnu ]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
        env:
          IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}

      - name: Publish
        if: github.event_name != 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
            files: 'target/${{ matrix.target }}/release/imgur-uploader.exe'
